{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blockchain FWPM\\\\Desktop\\\\N\\\\solidity\\\\src\\\\eventManagerTruffle\\\\client\\\\src\\\\components\\\\EventManager.js\";\nimport React from 'react';\nimport Login from './Login';\nimport CreateEvent from './CreateEvent';\nimport ItemList from './ItemList';\nimport './EventManager.css';\nimport Register from './Register';\nimport LoginStatus from './LoginStatus';\n\nclass EventManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      drizzleState: null\n    };\n    this.state = {\n      items: [{\n        id: 1,\n        creator: 0x367E7e251F63eeccD9Af88121A2C7D9F3cD5168c,\n        title: 'Kuchen',\n        expiration: 2595424765,\n        checked: false\n      }, {\n        id: 2,\n        creator: 0x367E7e251F63eeccD9Af88121A2C7D9F3cD5168c,\n        title: 'Bier',\n        expiration: 2595424765,\n        checked: true\n      }, {\n        id: 3,\n        creator: 0x367E7e251F63eeccD9Af88121A2C7D9F3cD5168c,\n        title: 'Haggis',\n        expiration: 2595424765,\n        checked: false\n      }]\n    };\n\n    this.toggleItem = id => {\n      console.log('User wants to toggle item with id=' + id);\n    };\n\n    this.delItem = id => {\n      console.log('User wants to delete item with id=' + id);\n    };\n\n    this.addEvent = (name, location, start, end) => {\n      console.log('User wants create event: ' + name + location + start + end);\n    };\n  }\n\n  doSomething() {\n    console.log(\"do something\");\n  }\n\n  login() {\n    console.log(\"logging in..\");\n  }\n\n  register() {\n    console.log(\"register new user...\");\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props; // subscribe to changes in the store\n\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState(); // check to see if it's ready, if so, update local component state\n\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, \"EventManager did not load.\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"eventManager\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"eventManagerSection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \"EventManager\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"login_status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LoginStatus, {\n        drizzle: this.props.drizzle,\n        drizzleState: this.state.drizzleState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        valign: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Login, {\n        drizzle: this.props.drizzle,\n        drizzleState: this.state.drizzleState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 42\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        valign: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Register, {\n        drizzle: this.props.drizzle,\n        drizzleState: this.state.drizzleState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 42\n        }\n      }))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, \"Erstellung eines neuen Events\"), /*#__PURE__*/React.createElement(CreateEvent, {\n        drizzle: this.props.drizzle,\n        drizzleState: this.state.drizzleState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ItemList, {\n        items: this.state.items,\n        toggleItem: this.toggleItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      })));\n    }\n  }\n\n}\n\nexport default EventManager;","map":{"version":3,"sources":["C:/Users/Blockchain FWPM/Desktop/N/solidity/src/eventManagerTruffle/client/src/components/EventManager.js"],"names":["React","Login","CreateEvent","ItemList","Register","LoginStatus","EventManager","Component","state","loading","drizzleState","items","id","creator","title","expiration","checked","toggleItem","console","log","delItem","addEvent","name","location","start","end","doSomething","login","register","componentDidMount","drizzle","props","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport Login from './Login';\r\nimport CreateEvent from './CreateEvent';\r\nimport ItemList from './ItemList';\r\n\r\nimport './EventManager.css';\r\nimport Register from './Register';\r\nimport LoginStatus from './LoginStatus';\r\n\r\n\r\nclass EventManager extends React.Component {\r\n    state = { loading: true, drizzleState: null };\r\n\r\n    state = {\r\n        items: [\r\n            {\r\n                id: 1,\r\n                creator: 0x367E7e251F63eeccD9Af88121A2C7D9F3cD5168c,\r\n                title: 'Kuchen',\r\n                expiration: 2595424765,\r\n                checked: false\r\n            },\r\n            {\r\n                id: 2,\r\n                creator: 0x367E7e251F63eeccD9Af88121A2C7D9F3cD5168c,\r\n                title: 'Bier',\r\n                expiration: 2595424765,\r\n                checked: true\r\n            },\r\n            {\r\n                id: 3,\r\n                creator: 0x367E7e251F63eeccD9Af88121A2C7D9F3cD5168c,\r\n                title: 'Haggis',\r\n                expiration: 2595424765,\r\n                checked: false\r\n            },\r\n        ]\r\n    }\r\n\r\n    doSomething() {\r\n        console.log(\"do something\");\r\n    }\r\n\r\n    login() {\r\n        console.log(\"logging in..\");\r\n    }\r\n    \r\n    register() {\r\n        console.log(\"register new user...\");\r\n    }\r\n\r\n    toggleItem = (id) => {\r\n        console.log('User wants to toggle item with id=' + id);\r\n    }\r\n\r\n    delItem = (id) => {\r\n        console.log('User wants to delete item with id=' + id);\r\n    }\r\n    addEvent = (name, location, start, end) => {\r\n        console.log('User wants create event: ' + name + location + start + end);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { drizzle } = this.props;\r\n\r\n        // subscribe to changes in the store\r\n        this.unsubscribe = drizzle.store.subscribe(() => {\r\n\r\n        // every time the store updates, grab the state from drizzle\r\n        const drizzleState = drizzle.store.getState();\r\n\r\n        // check to see if it's ready, if so, update local component state\r\n        if (drizzleState.drizzleStatus.initialized) {\r\n            this.setState({ loading: false, drizzleState });\r\n        }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loading) {\r\n\r\n            return (\r\n                <p>EventManager did not load.</p>\r\n            );\r\n\r\n        } else {\r\n\r\n        return (\r\n            <div id=\"eventManager\">\r\n            <div id=\"eventManagerSection\">\r\n                <h2>EventManager</h2>\r\n\r\n                <div id=\"login_status\">\r\n                    <LoginStatus drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} />\r\n                </div>\r\n                \r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td valign=\"top\"><Login drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} /></td>\r\n                        <td valign=\"top\"><Register drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} /></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <br />\r\n                <h2>Erstellung eines neuen Events</h2>\r\n\r\n                <CreateEvent drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} />\r\n\r\n                <ItemList items={this.state.items} toggleItem={this.toggleItem} />\r\n\r\n                <br />\r\n            </div>\r\n            </div>\r\n        );\r\n\r\n        } \r\n\r\n    }\r\n\r\n}\r\n\r\nexport default EventManager"]},"metadata":{},"sourceType":"module"}