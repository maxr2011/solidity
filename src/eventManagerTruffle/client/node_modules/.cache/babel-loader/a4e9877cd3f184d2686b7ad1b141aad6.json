{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blockchain FWPM\\\\Desktop\\\\N\\\\solidity\\\\src\\\\eventManagerTruffle\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React from \"react\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginStatus: null,\n      drizzleState: null,\n      drizzle: null\n    };\n\n    this.refreshLoginState = () => {\n      var drizzle = this.state.drizzle;\n      var drizzleState = this.state.drizzleState;\n      const contract = drizzle.contracts.EventManager;\n      var state = drizzle.store.getState();\n\n      if (state.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState,\n          drizzle\n        }); // Für das dynamische Laden des Dropdownmenues \n\n        contract.methods.login().call().then(loginStatus => {\n          this.setState({\n            loginStatus\n          });\n          console.log(\"logged in: \" + loginStatus);\n        });\n      }\n    };\n\n    this.getLoginState = () => {\n      console.log(\"Logging in...\");\n      document.getElementById('login_status').innerHTML = '<p> Status: Wird geladen...</p>';\n      var drizzle = this.state.drizzle;\n      var drizzleState = this.state.drizzleState;\n      const contract = drizzle.contracts.EventManager;\n      var state = drizzle.store.getState();\n\n      if (state.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState,\n          drizzle\n        }); // Für das dynamische Laden des Dropdownmenues \n\n        contract.methods.login().call().then(loginStatus => {\n          this.setState({\n            loginStatus\n          });\n          console.log(\"logged in: \" + loginStatus);\n\n          if (loginStatus !== undefined && loginStatus != null) {\n            var login_status_text = \"Wird geladen...\";\n\n            if (loginStatus) {\n              login_status_text = \"Eingeloggt\";\n            } else {\n              login_status_text = \"Nicht Eingeloggt\";\n            }\n\n            document.getElementById('login_status').innerHTML = '<p> Status: ' + login_status_text + '</p>';\n          } else {\n            document.getElementById('login_status').innerHTML = '<p> Status: Wird geladen...</p>';\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.EventManager;\n    var state = drizzle.store.getState();\n\n    if (state.drizzleStatus.initialized) {\n      this.setState({\n        loading: false,\n        drizzleState,\n        drizzle\n      }); // Für das dynamische Laden des Dropdownmenues \n\n      contract.methods.login().call().then(loginStatus => {\n        this.setState({\n          loginStatus\n        });\n        console.log(\"logged in: \" + loginStatus);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getLoginState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Login\");\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Blockchain FWPM/Desktop/N/solidity/src/eventManagerTruffle/client/src/components/Login.js"],"names":["React","Login","Component","state","loginStatus","drizzleState","drizzle","refreshLoginState","contract","contracts","EventManager","store","getState","drizzleStatus","initialized","setState","loading","methods","login","call","then","console","log","getLoginState","document","getElementById","innerHTML","undefined","login_status_text","componentDidMount","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass Login extends React.Component {\r\n    state = { loginStatus: null, drizzleState: null, drizzle: null };\r\n\r\n    componentDidMount() {\r\n\r\n        const { drizzle, drizzleState } = this.props;\r\n        const contract = drizzle.contracts.EventManager;\r\n\r\n        var state = drizzle.store.getState();\r\n\r\n        if (state.drizzleStatus.initialized) {\r\n        \r\n            this.setState({ loading: false, drizzleState , drizzle });\r\n\r\n            // Für das dynamische Laden des Dropdownmenues \r\n            contract.methods.login().call().then(loginStatus => {\r\n              this.setState({ loginStatus });\r\n              console.log(\"logged in: \" + loginStatus);\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    refreshLoginState = () => {\r\n\r\n        var drizzle = this.state.drizzle;\r\n        var drizzleState = this.state.drizzleState;\r\n\r\n        const contract = drizzle.contracts.EventManager;\r\n\r\n        var state = drizzle.store.getState();\r\n\r\n        if (state.drizzleStatus.initialized) {\r\n        \r\n            this.setState({ loading: false, drizzleState , drizzle });\r\n\r\n            // Für das dynamische Laden des Dropdownmenues \r\n            contract.methods.login().call().then(loginStatus => {\r\n              this.setState({ loginStatus });\r\n              console.log(\"logged in: \" + loginStatus);\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getLoginState = () => {\r\n\r\n        console.log(\"Logging in...\");\r\n        document.getElementById('login_status').innerHTML = '<p> Status: Wird geladen...</p>';\r\n\r\n        var drizzle = this.state.drizzle;\r\n        var drizzleState = this.state.drizzleState;\r\n\r\n        const contract = drizzle.contracts.EventManager;\r\n\r\n        var state = drizzle.store.getState();\r\n\r\n        if (state.drizzleStatus.initialized) {\r\n        \r\n            this.setState({ loading: false, drizzleState , drizzle });\r\n\r\n            // Für das dynamische Laden des Dropdownmenues \r\n            contract.methods.login().call().then(loginStatus => {\r\n\r\n              this.setState({ loginStatus });\r\n              console.log(\"logged in: \" + loginStatus);\r\n\r\n              if(loginStatus !== undefined && loginStatus != null) {\r\n\r\n                var login_status_text = \"Wird geladen...\";\r\n                if(loginStatus) {\r\n                    login_status_text = \"Eingeloggt\";\r\n                } else {\r\n                    login_status_text = \"Nicht Eingeloggt\";\r\n                }\r\n    \r\n                document.getElementById('login_status').innerHTML = '<p> Status: ' + login_status_text + '</p>';\r\n    \r\n              } else {\r\n    \r\n                document.getElementById('login_status').innerHTML = '<p> Status: Wird geladen...</p>';\r\n    \r\n              }\r\n\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <button onClick={this.getLoginState}>Login</button>\r\n        );       \r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}