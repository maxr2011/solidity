{"ast":null,"code":"var f = require('../formatters');\n\nvar SolidityType = require('../type');\n/**\r\n * SolidityTypeBytes is a prototype that represents the bytes type.\r\n * It matches:\r\n * bytes\r\n * bytes[]\r\n * bytes[4]\r\n * bytes[][]\r\n * bytes[3][]\r\n * bytes[][6][], ...\r\n * bytes32\r\n * bytes8[4]\r\n * bytes[3][]\r\n */\n\n\nvar SolidityTypeBytes = function () {\n  this._inputFormatter = f.formatInputBytes;\n  this._outputFormatter = f.formatOutputBytes;\n};\n\nSolidityTypeBytes.prototype = new SolidityType({});\nSolidityTypeBytes.prototype.constructor = SolidityTypeBytes;\n\nSolidityTypeBytes.prototype.isType = function (name) {\n  return !!name.match(/^bytes([0-9]{1,})(\\[([0-9]*)\\])*$/);\n};\n\nmodule.exports = SolidityTypeBytes;","map":{"version":3,"sources":["C:/Users/Blockchain FWPM/Desktop/N/solidity/src/eventManagerTruffle/client/node_modules/drizzle/node_modules/web3-eth-abi/src/types/bytes.js"],"names":["f","require","SolidityType","SolidityTypeBytes","_inputFormatter","formatInputBytes","_outputFormatter","formatOutputBytes","prototype","constructor","isType","name","match","module","exports"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,eAAD,CAAf;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,SAAD,CAA1B;AAEA;;;;;;;;;;;;;;;AAaA,IAAIE,iBAAiB,GAAG,YAAY;AAChC,OAAKC,eAAL,GAAuBJ,CAAC,CAACK,gBAAzB;AACA,OAAKC,gBAAL,GAAwBN,CAAC,CAACO,iBAA1B;AACH,CAHD;;AAKAJ,iBAAiB,CAACK,SAAlB,GAA8B,IAAIN,YAAJ,CAAiB,EAAjB,CAA9B;AACAC,iBAAiB,CAACK,SAAlB,CAA4BC,WAA5B,GAA0CN,iBAA1C;;AAEAA,iBAAiB,CAACK,SAAlB,CAA4BE,MAA5B,GAAqC,UAAUC,IAAV,EAAgB;AACjD,SAAO,CAAC,CAACA,IAAI,CAACC,KAAL,CAAW,mCAAX,CAAT;AACH,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiBX,iBAAjB","sourcesContent":["var f = require('../formatters');\r\nvar SolidityType = require('../type');\r\n\r\n/**\r\n * SolidityTypeBytes is a prototype that represents the bytes type.\r\n * It matches:\r\n * bytes\r\n * bytes[]\r\n * bytes[4]\r\n * bytes[][]\r\n * bytes[3][]\r\n * bytes[][6][], ...\r\n * bytes32\r\n * bytes8[4]\r\n * bytes[3][]\r\n */\r\nvar SolidityTypeBytes = function () {\r\n    this._inputFormatter = f.formatInputBytes;\r\n    this._outputFormatter = f.formatOutputBytes;\r\n};\r\n\r\nSolidityTypeBytes.prototype = new SolidityType({});\r\nSolidityTypeBytes.prototype.constructor = SolidityTypeBytes;\r\n\r\nSolidityTypeBytes.prototype.isType = function (name) {\r\n    return !!name.match(/^bytes([0-9]{1,})(\\[([0-9]*)\\])*$/);\r\n};\r\n\r\nmodule.exports = SolidityTypeBytes;\r\n"]},"metadata":{},"sourceType":"script"}