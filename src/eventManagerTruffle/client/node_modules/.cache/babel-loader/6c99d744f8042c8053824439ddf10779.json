{"ast":null,"code":"var f = require('../formatters');\n\nvar SolidityType = require('../type');\n/**\r\n * SolidityTypeInt is a protoype that represents int type\r\n * It matches:\r\n * int\r\n * int[]\r\n * int[4]\r\n * int[][]\r\n * int[3][]\r\n * int[][6][], ...\r\n * int32\r\n * int64[]\r\n * int8[4]\r\n * int256[][]\r\n * int[3][]\r\n * int64[][6][], ...\r\n */\n\n\nvar SolidityTypeInt = function () {\n  this._inputFormatter = f.formatInputInt;\n  this._outputFormatter = f.formatOutputInt;\n};\n\nSolidityTypeInt.prototype = new SolidityType({});\nSolidityTypeInt.prototype.constructor = SolidityTypeInt;\n\nSolidityTypeInt.prototype.isType = function (name) {\n  return !!name.match(/^int([0-9]*)?(\\[([0-9]*)\\])*$/);\n};\n\nmodule.exports = SolidityTypeInt;","map":{"version":3,"sources":["C:/Users/Blockchain FWPM/Desktop/N/solidity/src/eventManagerTruffle/client/node_modules/drizzle/node_modules/web3-eth-abi/src/types/int.js"],"names":["f","require","SolidityType","SolidityTypeInt","_inputFormatter","formatInputInt","_outputFormatter","formatOutputInt","prototype","constructor","isType","name","match","module","exports"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,eAAD,CAAf;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,SAAD,CAA1B;AAEA;;;;;;;;;;;;;;;;;;AAgBA,IAAIE,eAAe,GAAG,YAAY;AAC9B,OAAKC,eAAL,GAAuBJ,CAAC,CAACK,cAAzB;AACA,OAAKC,gBAAL,GAAwBN,CAAC,CAACO,eAA1B;AACH,CAHD;;AAKAJ,eAAe,CAACK,SAAhB,GAA4B,IAAIN,YAAJ,CAAiB,EAAjB,CAA5B;AACAC,eAAe,CAACK,SAAhB,CAA0BC,WAA1B,GAAwCN,eAAxC;;AAEAA,eAAe,CAACK,SAAhB,CAA0BE,MAA1B,GAAmC,UAAUC,IAAV,EAAgB;AAC/C,SAAO,CAAC,CAACA,IAAI,CAACC,KAAL,CAAW,+BAAX,CAAT;AACH,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiBX,eAAjB","sourcesContent":["var f = require('../formatters');\r\nvar SolidityType = require('../type');\r\n\r\n/**\r\n * SolidityTypeInt is a protoype that represents int type\r\n * It matches:\r\n * int\r\n * int[]\r\n * int[4]\r\n * int[][]\r\n * int[3][]\r\n * int[][6][], ...\r\n * int32\r\n * int64[]\r\n * int8[4]\r\n * int256[][]\r\n * int[3][]\r\n * int64[][6][], ...\r\n */\r\nvar SolidityTypeInt = function () {\r\n    this._inputFormatter = f.formatInputInt;\r\n    this._outputFormatter = f.formatOutputInt;\r\n};\r\n\r\nSolidityTypeInt.prototype = new SolidityType({});\r\nSolidityTypeInt.prototype.constructor = SolidityTypeInt;\r\n\r\nSolidityTypeInt.prototype.isType = function (name) {\r\n    return !!name.match(/^int([0-9]*)?(\\[([0-9]*)\\])*$/);\r\n};\r\n\r\nmodule.exports = SolidityTypeInt;\r\n"]},"metadata":{},"sourceType":"script"}