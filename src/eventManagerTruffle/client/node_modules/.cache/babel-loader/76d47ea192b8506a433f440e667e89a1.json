{"ast":null,"code":"/*\r\n This file is part of web3.js.\r\n\r\n web3.js is free software: you can redistribute it and/or modify\r\n it under the terms of the GNU Lesser General Public License as published by\r\n the Free Software Foundation, either version 3 of the License, or\r\n (at your option) any later version.\r\n\r\n web3.js is distributed in the hope that it will be useful,\r\n but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n GNU Lesser General Public License for more details.\r\n\r\n You should have received a copy of the GNU Lesser General Public License\r\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n */\n\n/**\r\n * @file utils.js\r\n * @author Marek Kotewicz <marek@parity.io>\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\nvar _ = require('underscore');\n\nvar ethjsUnit = require('ethjs-unit');\n\nvar utils = require('./utils.js');\n\nvar soliditySha3 = require('./soliditySha3.js');\n\nvar randomHex = require('randomhex');\n/**\r\n * Fires an error in an event emitter and callback and returns the eventemitter\r\n *\r\n * @method _fireError\r\n * @param {Object} error a string, a error, or an object with {message, data}\r\n * @param {Object} emitter\r\n * @param {Function} reject\r\n * @param {Function} callback\r\n * @return {Object} the emitter\r\n */\n\n\nvar _fireError = function (error, emitter, reject, callback) {\n  /*jshint maxcomplexity: 10 */\n  // add data if given\n  if (_.isObject(error) && !(error instanceof Error) && error.data) {\n    if (_.isObject(error.data) || _.isArray(error.data)) {\n      error.data = JSON.stringify(error.data, null, 2);\n    }\n\n    error = error.message + \"\\n\" + error.data;\n  }\n\n  if (_.isString(error)) {\n    error = new Error(error);\n  }\n\n  if (_.isFunction(callback)) {\n    callback(error);\n  }\n\n  if (_.isFunction(reject)) {\n    // suppress uncatched error if an error listener is present\n    // OR suppress uncatched error if an callback listener is present\n    if (emitter && _.isFunction(emitter.listeners) && emitter.listeners('error').length || _.isFunction(callback)) {\n      emitter.catch(function () {});\n    } // reject later, to be able to return emitter\n\n\n    setTimeout(function () {\n      reject(error);\n    }, 1);\n  }\n\n  if (emitter && _.isFunction(emitter.emit)) {\n    // emit later, to be able to return emitter\n    setTimeout(function () {\n      emitter.emit('error', error);\n      emitter.removeAllListeners();\n    }, 1);\n  }\n\n  return emitter;\n};\n/**\r\n * Should be used to create full function/event name from json abi\r\n *\r\n * @method _jsonInterfaceMethodToString\r\n * @param {Object} json\r\n * @return {String} full function/event name\r\n */\n\n\nvar _jsonInterfaceMethodToString = function (json) {\n  if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\n    return json.name;\n  }\n\n  var typeName = json.inputs.map(function (i) {\n    return i.type;\n  }).join(',');\n  return json.name + '(' + typeName + ')';\n};\n/**\r\n * Should be called to get ascii from it's hex representation\r\n *\r\n * @method hexToAscii\r\n * @param {String} hex\r\n * @returns {String} ascii string representation of hex value\r\n */\n\n\nvar hexToAscii = function (hex) {\n  if (!utils.isHexStrict(hex)) throw new Error('The parameter must be a valid HEX string.');\n  var str = \"\";\n  var i = 0,\n      l = hex.length;\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n};\n/**\r\n * Should be called to get hex representation (prefixed by 0x) of ascii string\r\n *\r\n * @method asciiToHex\r\n * @param {String} str\r\n * @returns {String} hex representation of input string\r\n */\n\n\nvar asciiToHex = function (str) {\n  if (!str) return \"0x00\";\n  var hex = \"\";\n\n  for (var i = 0; i < str.length; i++) {\n    var code = str.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return \"0x\" + hex;\n};\n/**\r\n * Returns value of unit in Wei\r\n *\r\n * @method getUnitValue\r\n * @param {String} unit the unit to convert to, default ether\r\n * @returns {BN} value of the unit (in Wei)\r\n * @throws error if the unit is not correct:w\r\n */\n\n\nvar getUnitValue = function (unit) {\n  unit = unit ? unit.toLowerCase() : 'ether';\n\n  if (!ethjsUnit.unitMap[unit]) {\n    throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n  }\n\n  return unit;\n};\n/**\r\n * Takes a number of wei and converts it to any other ether unit.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method fromWei\r\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert to, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\n\n\nvar fromWei = function (number, unit) {\n  unit = getUnitValue(unit);\n\n  if (!utils.isBN(number) && !_.isString(number)) {\n    throw new Error('Please pass numbers as strings or BigNumber objects to avoid precision errors.');\n  }\n\n  return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\r\n * Takes a number of a unit and converts it to wei.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method toWei\r\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert from, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\n\n\nvar toWei = function (number, unit) {\n  unit = getUnitValue(unit);\n\n  if (!utils.isBN(number) && !_.isString(number)) {\n    throw new Error('Please pass numbers as strings or BigNumber objects to avoid precision errors.');\n  }\n\n  return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\r\n * Converts to a checksum address\r\n *\r\n * @method toChecksumAddress\r\n * @param {String} address the given HEX address\r\n * @return {String}\r\n */\n\n\nvar toChecksumAddress = function (address) {\n  if (typeof address === 'undefined') return '';\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n  address = address.toLowerCase().replace(/^0x/i, '');\n  var addressHash = utils.sha3(address).replace(/^0x/i, '');\n  var checksumAddress = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    // If ith character is 9 to f then make it uppercase\n    if (parseInt(addressHash[i], 16) > 7) {\n      checksumAddress += address[i].toUpperCase();\n    } else {\n      checksumAddress += address[i];\n    }\n  }\n\n  return checksumAddress;\n};\n\nmodule.exports = {\n  _fireError: _fireError,\n  _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n  // extractDisplayName: extractDisplayName,\n  // extractTypeName: extractTypeName,\n  randomHex: randomHex,\n  _: _,\n  BN: utils.BN,\n  isBN: utils.isBN,\n  isBigNumber: utils.isBigNumber,\n  isHex: utils.isHex,\n  isHexStrict: utils.isHexStrict,\n  sha3: utils.sha3,\n  keccak256: utils.sha3,\n  soliditySha3: soliditySha3,\n  isAddress: utils.isAddress,\n  checkAddressChecksum: utils.checkAddressChecksum,\n  toChecksumAddress: toChecksumAddress,\n  toHex: utils.toHex,\n  toBN: utils.toBN,\n  bytesToHex: utils.bytesToHex,\n  hexToBytes: utils.hexToBytes,\n  hexToNumberString: utils.hexToNumberString,\n  hexToNumber: utils.hexToNumber,\n  toDecimal: utils.hexToNumber,\n  // alias\n  numberToHex: utils.numberToHex,\n  fromDecimal: utils.numberToHex,\n  // alias\n  hexToUtf8: utils.hexToUtf8,\n  hexToString: utils.hexToUtf8,\n  toUtf8: utils.hexToUtf8,\n  utf8ToHex: utils.utf8ToHex,\n  stringToHex: utils.utf8ToHex,\n  fromUtf8: utils.utf8ToHex,\n  hexToAscii: hexToAscii,\n  toAscii: hexToAscii,\n  asciiToHex: asciiToHex,\n  fromAscii: asciiToHex,\n  unitMap: ethjsUnit.unitMap,\n  toWei: toWei,\n  fromWei: fromWei,\n  padLeft: utils.leftPad,\n  leftPad: utils.leftPad,\n  padRight: utils.rightPad,\n  rightPad: utils.rightPad,\n  toTwosComplement: utils.toTwosComplement\n};","map":{"version":3,"sources":["C:/Users/Blockchain FWPM/Desktop/N/solidity/src/eventManagerTruffle/client/node_modules/drizzle/node_modules/web3-utils/src/index.js"],"names":["_","require","ethjsUnit","utils","soliditySha3","randomHex","_fireError","error","emitter","reject","callback","isObject","Error","data","isArray","JSON","stringify","message","isString","isFunction","listeners","length","catch","setTimeout","emit","removeAllListeners","_jsonInterfaceMethodToString","json","name","indexOf","typeName","inputs","map","i","type","join","hexToAscii","hex","isHexStrict","str","l","substring","code","parseInt","substr","String","fromCharCode","asciiToHex","charCodeAt","n","toString","getUnitValue","unit","toLowerCase","unitMap","fromWei","number","isBN","toWei","toChecksumAddress","address","test","replace","addressHash","sha3","checksumAddress","toUpperCase","module","exports","BN","isBigNumber","isHex","keccak256","isAddress","checkAddressChecksum","toHex","toBN","bytesToHex","hexToBytes","hexToNumberString","hexToNumber","toDecimal","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","utf8ToHex","stringToHex","fromUtf8","toAscii","fromAscii","padLeft","leftPad","padRight","rightPad","toTwosComplement"],"mappings":"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","sourcesContent":["/*\r\n This file is part of web3.js.\r\n\r\n web3.js is free software: you can redistribute it and/or modify\r\n it under the terms of the GNU Lesser General Public License as published by\r\n the Free Software Foundation, either version 3 of the License, or\r\n (at your option) any later version.\r\n\r\n web3.js is distributed in the hope that it will be useful,\r\n but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n GNU Lesser General Public License for more details.\r\n\r\n You should have received a copy of the GNU Lesser General Public License\r\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n/**\r\n * @file utils.js\r\n * @author Marek Kotewicz <marek@parity.io>\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\n\r\n\r\nvar _ = require('underscore');\r\nvar ethjsUnit = require('ethjs-unit');\r\nvar utils = require('./utils.js');\r\nvar soliditySha3 = require('./soliditySha3.js');\r\nvar randomHex = require('randomhex');\r\n\r\n\r\n\r\n/**\r\n * Fires an error in an event emitter and callback and returns the eventemitter\r\n *\r\n * @method _fireError\r\n * @param {Object} error a string, a error, or an object with {message, data}\r\n * @param {Object} emitter\r\n * @param {Function} reject\r\n * @param {Function} callback\r\n * @return {Object} the emitter\r\n */\r\nvar _fireError = function (error, emitter, reject, callback) {\r\n    /*jshint maxcomplexity: 10 */\r\n\r\n    // add data if given\r\n    if(_.isObject(error) && !(error instanceof Error) &&  error.data) {\r\n        if(_.isObject(error.data) || _.isArray(error.data)) {\r\n            error.data = JSON.stringify(error.data, null, 2);\r\n        }\r\n\r\n        error = error.message +\"\\n\"+ error.data;\r\n    }\r\n\r\n    if(_.isString(error)) {\r\n        error = new Error(error);\r\n    }\r\n\r\n    if (_.isFunction(callback)) {\r\n        callback(error);\r\n    }\r\n    if (_.isFunction(reject)) {\r\n        // suppress uncatched error if an error listener is present\r\n        // OR suppress uncatched error if an callback listener is present\r\n        if (emitter &&\r\n            (_.isFunction(emitter.listeners) &&\r\n            emitter.listeners('error').length) || _.isFunction(callback)) {\r\n            emitter.catch(function(){});\r\n        }\r\n        // reject later, to be able to return emitter\r\n        setTimeout(function () {\r\n            reject(error);\r\n        }, 1);\r\n    }\r\n\r\n    if(emitter && _.isFunction(emitter.emit)) {\r\n        // emit later, to be able to return emitter\r\n        setTimeout(function () {\r\n            emitter.emit('error', error);\r\n            emitter.removeAllListeners();\r\n        }, 1);\r\n    }\r\n\r\n    return emitter;\r\n};\r\n\r\n/**\r\n * Should be used to create full function/event name from json abi\r\n *\r\n * @method _jsonInterfaceMethodToString\r\n * @param {Object} json\r\n * @return {String} full function/event name\r\n */\r\nvar _jsonInterfaceMethodToString = function (json) {\r\n    if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\r\n        return json.name;\r\n    }\r\n\r\n    var typeName = json.inputs.map(function(i){return i.type; }).join(',');\r\n    return json.name + '(' + typeName + ')';\r\n};\r\n\r\n\r\n\r\n/**\r\n * Should be called to get ascii from it's hex representation\r\n *\r\n * @method hexToAscii\r\n * @param {String} hex\r\n * @returns {String} ascii string representation of hex value\r\n */\r\nvar hexToAscii = function(hex) {\r\n    if (!utils.isHexStrict(hex))\r\n        throw new Error('The parameter must be a valid HEX string.');\r\n\r\n    var str = \"\";\r\n    var i = 0, l = hex.length;\r\n    if (hex.substring(0, 2) === '0x') {\r\n        i = 2;\r\n    }\r\n    for (; i < l; i+=2) {\r\n        var code = parseInt(hex.substr(i, 2), 16);\r\n        str += String.fromCharCode(code);\r\n    }\r\n\r\n    return str;\r\n};\r\n\r\n/**\r\n * Should be called to get hex representation (prefixed by 0x) of ascii string\r\n *\r\n * @method asciiToHex\r\n * @param {String} str\r\n * @returns {String} hex representation of input string\r\n */\r\nvar asciiToHex = function(str) {\r\n    if(!str)\r\n        return \"0x00\";\r\n    var hex = \"\";\r\n    for(var i = 0; i < str.length; i++) {\r\n        var code = str.charCodeAt(i);\r\n        var n = code.toString(16);\r\n        hex += n.length < 2 ? '0' + n : n;\r\n    }\r\n\r\n    return \"0x\" + hex;\r\n};\r\n\r\n\r\n\r\n/**\r\n * Returns value of unit in Wei\r\n *\r\n * @method getUnitValue\r\n * @param {String} unit the unit to convert to, default ether\r\n * @returns {BN} value of the unit (in Wei)\r\n * @throws error if the unit is not correct:w\r\n */\r\nvar getUnitValue = function (unit) {\r\n    unit = unit ? unit.toLowerCase() : 'ether';\r\n    if (!ethjsUnit.unitMap[unit]) {\r\n        throw new Error('This unit \"'+ unit +'\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\r\n    }\r\n    return unit;\r\n};\r\n\r\n/**\r\n * Takes a number of wei and converts it to any other ether unit.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method fromWei\r\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert to, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\r\nvar fromWei = function(number, unit) {\r\n    unit = getUnitValue(unit);\r\n\r\n    if(!utils.isBN(number) && !_.isString(number)) {\r\n        throw new Error('Please pass numbers as strings or BigNumber objects to avoid precision errors.');\r\n    }\r\n\r\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\r\n};\r\n\r\n/**\r\n * Takes a number of a unit and converts it to wei.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method toWei\r\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert from, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\r\nvar toWei = function(number, unit) {\r\n    unit = getUnitValue(unit);\r\n\r\n    if(!utils.isBN(number) && !_.isString(number)) {\r\n        throw new Error('Please pass numbers as strings or BigNumber objects to avoid precision errors.');\r\n    }\r\n\r\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Converts to a checksum address\r\n *\r\n * @method toChecksumAddress\r\n * @param {String} address the given HEX address\r\n * @return {String}\r\n */\r\nvar toChecksumAddress = function (address) {\r\n    if (typeof address === 'undefined') return '';\r\n\r\n    if(!/^(0x)?[0-9a-f]{40}$/i.test(address))\r\n        throw new Error('Given address \"'+ address +'\" is not a valid Ethereum address.');\r\n\r\n\r\n\r\n    address = address.toLowerCase().replace(/^0x/i,'');\r\n    var addressHash = utils.sha3(address).replace(/^0x/i,'');\r\n    var checksumAddress = '0x';\r\n\r\n    for (var i = 0; i < address.length; i++ ) {\r\n        // If ith character is 9 to f then make it uppercase\r\n        if (parseInt(addressHash[i], 16) > 7) {\r\n            checksumAddress += address[i].toUpperCase();\r\n        } else {\r\n            checksumAddress += address[i];\r\n        }\r\n    }\r\n    return checksumAddress;\r\n};\r\n\r\n\r\n\r\nmodule.exports = {\r\n    _fireError: _fireError,\r\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\r\n    // extractDisplayName: extractDisplayName,\r\n    // extractTypeName: extractTypeName,\r\n    randomHex: randomHex,\r\n    _: _,\r\n    BN: utils.BN,\r\n    isBN: utils.isBN,\r\n    isBigNumber: utils.isBigNumber,\r\n    isHex: utils.isHex,\r\n    isHexStrict: utils.isHexStrict,\r\n    sha3: utils.sha3,\r\n    keccak256: utils.sha3,\r\n    soliditySha3: soliditySha3,\r\n    isAddress: utils.isAddress,\r\n    checkAddressChecksum: utils.checkAddressChecksum,\r\n    toChecksumAddress: toChecksumAddress,\r\n    toHex: utils.toHex,\r\n    toBN: utils.toBN,\r\n\r\n    bytesToHex: utils.bytesToHex,\r\n    hexToBytes: utils.hexToBytes,\r\n\r\n    hexToNumberString: utils.hexToNumberString,\r\n\r\n    hexToNumber: utils.hexToNumber,\r\n    toDecimal: utils.hexToNumber, // alias\r\n\r\n    numberToHex: utils.numberToHex,\r\n    fromDecimal: utils.numberToHex, // alias\r\n\r\n    hexToUtf8: utils.hexToUtf8,\r\n    hexToString: utils.hexToUtf8,\r\n    toUtf8: utils.hexToUtf8,\r\n\r\n    utf8ToHex: utils.utf8ToHex,\r\n    stringToHex: utils.utf8ToHex,\r\n    fromUtf8: utils.utf8ToHex,\r\n\r\n    hexToAscii: hexToAscii,\r\n    toAscii: hexToAscii,\r\n    asciiToHex: asciiToHex,\r\n    fromAscii: asciiToHex,\r\n\r\n    unitMap: ethjsUnit.unitMap,\r\n    toWei: toWei,\r\n    fromWei: fromWei,\r\n\r\n    padLeft: utils.leftPad,\r\n    leftPad: utils.leftPad,\r\n    padRight: utils.rightPad,\r\n    rightPad: utils.rightPad,\r\n    toTwosComplement: utils.toTwosComplement\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"script"}