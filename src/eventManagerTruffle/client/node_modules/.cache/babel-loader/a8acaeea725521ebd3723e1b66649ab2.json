{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blockchain FWPM\\\\Desktop\\\\N\\\\solidity\\\\src\\\\eventManagerTruffle\\\\client\\\\src\\\\components\\\\LoginStatus.js\";\nimport React from \"react\";\n\nclass LoginStatus extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginStatus: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.EventManager;\n    var state = drizzle.store.getState();\n\n    if (state.drizzleStatus.initialized) {\n      // Für das dynamische Laden des Dropdownmenues \n      contract.methods.login().call().then(loginStatus => {\n        this.setState({\n          loginStatus\n        });\n        console.log(\"logged in: \" + loginStatus);\n      });\n    }\n  }\n\n  getLoginState() {\n    var state = this.drizzle.store.getState();\n\n    if (state.drizzleStatus.initialized) {\n      const dataKey = this.drizzle.contracts.EventManager.methods.login.cacheCall();\n      return state.contracts.EventManager.login[dataKey].value;\n    }\n  }\n\n  render() {\n    const ContractState = this.props.drizzleState.contracts;\n    var login_status = this.state.loginStatus;\n\n    if (login_status !== undefined && login_status != null) {\n      var login_status_text = \"Wird geladen...\";\n\n      if (login_status) {\n        login_status_text = \"Eingeloggt\";\n      } else {\n        login_status_text = \"Nicht Eingeloggt\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"login_status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, \" Status: \", login_status_text));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"login_status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, \" Status: Wird geladen...\"));\n    }\n  }\n\n}\n\nexport default LoginStatus;","map":{"version":3,"sources":["C:/Users/Blockchain FWPM/Desktop/N/solidity/src/eventManagerTruffle/client/src/components/LoginStatus.js"],"names":["React","LoginStatus","Component","state","loginStatus","componentDidMount","drizzle","drizzleState","props","contract","contracts","EventManager","store","getState","drizzleStatus","initialized","methods","login","call","then","setState","console","log","getLoginState","dataKey","cacheCall","value","render","ContractState","login_status","undefined","login_status_text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAD8B;AAAA;;AAGtCC,EAAAA,iBAAiB,GAAG;AAEhB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA4B,KAAKC,KAAvC;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACI,SAAR,CAAkBC,YAAnC;AAEA,QAAIR,KAAK,GAAGG,OAAO,CAACM,KAAR,CAAcC,QAAd,EAAZ;;AAEA,QAAIV,KAAK,CAACW,aAAN,CAAoBC,WAAxB,EAAqC;AAEjC;AACAN,MAAAA,QAAQ,CAACO,OAAT,CAAiBC,KAAjB,GAAyBC,IAAzB,GAAgCC,IAAhC,CAAqCf,WAAW,IAAI;AAClD,aAAKgB,QAAL,CAAc;AAAEhB,UAAAA;AAAF,SAAd;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBlB,WAA5B;AACD,OAHD;AAKH;AAEJ;;AAEDmB,EAAAA,aAAa,GAAG;AAEZ,QAAIpB,KAAK,GAAG,KAAKG,OAAL,CAAaM,KAAb,CAAmBC,QAAnB,EAAZ;;AAEA,QAAIV,KAAK,CAACW,aAAN,CAAoBC,WAAxB,EAAqC;AAEjC,YAAMS,OAAO,GAAG,KAAKlB,OAAL,CAAaI,SAAb,CAAuBC,YAAvB,CAAoCK,OAApC,CAA4CC,KAA5C,CAAkDQ,SAAlD,EAAhB;AAEA,aAAOtB,KAAK,CAACO,SAAN,CAAgBC,YAAhB,CAA6BM,KAA7B,CAAmCO,OAAnC,EAA4CE,KAAnD;AAEH;AAEJ;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,aAAa,GAAG,KAAKpB,KAAL,CAAWD,YAAX,CAAwBG,SAA9C;AAEA,QAAImB,YAAY,GAAG,KAAK1B,KAAL,CAAWC,WAA9B;;AAEA,QAAGyB,YAAY,KAAKC,SAAjB,IAA8BD,YAAY,IAAI,IAAjD,EAAuD;AAEnD,UAAIE,iBAAiB,GAAG,iBAAxB;;AACA,UAAGF,YAAH,EAAiB;AACbE,QAAAA,iBAAiB,GAAG,YAApB;AACH,OAFD,MAEO;AACHA,QAAAA,iBAAiB,GAAG,kBAApB;AACH;;AAED,0BACI;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,iBAAb,CADJ,CADJ;AAMH,KAfD,MAeO;AAEH,0BACI;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,CADJ;AAMH;AAEJ;;AAnEqC;;AAuE1C,eAAe9B,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nclass LoginStatus extends React.Component {\r\n    state = { loginStatus: null };\r\n\r\n    componentDidMount() {\r\n\r\n        const { drizzle, drizzleState } = this.props;\r\n        const contract = drizzle.contracts.EventManager;\r\n\r\n        var state = drizzle.store.getState();\r\n\r\n        if (state.drizzleStatus.initialized) {\r\n        \r\n            // Für das dynamische Laden des Dropdownmenues \r\n            contract.methods.login().call().then(loginStatus => {\r\n              this.setState({ loginStatus });\r\n              console.log(\"logged in: \" + loginStatus);\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getLoginState() {\r\n\r\n        var state = this.drizzle.store.getState();\r\n\r\n        if (state.drizzleStatus.initialized) {\r\n\r\n            const dataKey = this.drizzle.contracts.EventManager.methods.login.cacheCall();\r\n\r\n            return state.contracts.EventManager.login[dataKey].value;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const ContractState = this.props.drizzleState.contracts;\r\n\r\n        var login_status = this.state.loginStatus;\r\n\r\n        if(login_status !== undefined && login_status != null) {\r\n\r\n            var login_status_text = \"Wird geladen...\";\r\n            if(login_status) {\r\n                login_status_text = \"Eingeloggt\";\r\n            } else {\r\n                login_status_text = \"Nicht Eingeloggt\";\r\n            }\r\n\r\n            return (\r\n                <div id=\"login_status\">\r\n                    <p> Status: {login_status_text}</p>\r\n                </div> \r\n            );\r\n\r\n        } else {\r\n\r\n            return (\r\n                <div id=\"login_status\">\r\n                    <p> Status: Wird geladen...</p>\r\n                </div> \r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default LoginStatus"]},"metadata":{},"sourceType":"module"}