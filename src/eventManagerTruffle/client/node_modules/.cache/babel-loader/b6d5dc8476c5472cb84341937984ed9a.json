{"ast":null,"code":"var f = require('../formatters');\n\nvar SolidityType = require('../type');\n/**\r\n * SolidityTypeUInt is a protoype that represents uint type\r\n * It matches:\r\n * uint\r\n * uint[]\r\n * uint[4]\r\n * uint[][]\r\n * uint[3][]\r\n * uint[][6][], ...\r\n * uint32\r\n * uint64[]\r\n * uint8[4]\r\n * uint256[][]\r\n * uint[3][]\r\n * uint64[][6][], ...\r\n */\n\n\nvar SolidityTypeUInt = function () {\n  this._inputFormatter = f.formatInputInt;\n  this._outputFormatter = f.formatOutputUInt;\n};\n\nSolidityTypeUInt.prototype = new SolidityType({});\nSolidityTypeUInt.prototype.constructor = SolidityTypeUInt;\n\nSolidityTypeUInt.prototype.isType = function (name) {\n  return !!name.match(/^uint([0-9]*)?(\\[([0-9]*)\\])*$/);\n};\n\nmodule.exports = SolidityTypeUInt;","map":{"version":3,"sources":["C:/Users/Blockchain FWPM/Desktop/N/solidity/src/eventManagerTruffle/client/node_modules/drizzle/node_modules/web3-eth-abi/src/types/uint.js"],"names":["f","require","SolidityType","SolidityTypeUInt","_inputFormatter","formatInputInt","_outputFormatter","formatOutputUInt","prototype","constructor","isType","name","match","module","exports"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,eAAD,CAAf;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,SAAD,CAA1B;AAEA;;;;;;;;;;;;;;;;;;AAgBA,IAAIE,gBAAgB,GAAG,YAAY;AAC/B,OAAKC,eAAL,GAAuBJ,CAAC,CAACK,cAAzB;AACA,OAAKC,gBAAL,GAAwBN,CAAC,CAACO,gBAA1B;AACH,CAHD;;AAKAJ,gBAAgB,CAACK,SAAjB,GAA6B,IAAIN,YAAJ,CAAiB,EAAjB,CAA7B;AACAC,gBAAgB,CAACK,SAAjB,CAA2BC,WAA3B,GAAyCN,gBAAzC;;AAEAA,gBAAgB,CAACK,SAAjB,CAA2BE,MAA3B,GAAoC,UAAUC,IAAV,EAAgB;AAChD,SAAO,CAAC,CAACA,IAAI,CAACC,KAAL,CAAW,gCAAX,CAAT;AACH,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiBX,gBAAjB","sourcesContent":["var f = require('../formatters');\r\nvar SolidityType = require('../type');\r\n\r\n/**\r\n * SolidityTypeUInt is a protoype that represents uint type\r\n * It matches:\r\n * uint\r\n * uint[]\r\n * uint[4]\r\n * uint[][]\r\n * uint[3][]\r\n * uint[][6][], ...\r\n * uint32\r\n * uint64[]\r\n * uint8[4]\r\n * uint256[][]\r\n * uint[3][]\r\n * uint64[][6][], ...\r\n */\r\nvar SolidityTypeUInt = function () {\r\n    this._inputFormatter = f.formatInputInt;\r\n    this._outputFormatter = f.formatOutputUInt;\r\n};\r\n\r\nSolidityTypeUInt.prototype = new SolidityType({});\r\nSolidityTypeUInt.prototype.constructor = SolidityTypeUInt;\r\n\r\nSolidityTypeUInt.prototype.isType = function (name) {\r\n    return !!name.match(/^uint([0-9]*)?(\\[([0-9]*)\\])*$/);\r\n};\r\n\r\nmodule.exports = SolidityTypeUInt;\r\n"]},"metadata":{},"sourceType":"script"}