{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\n\"use strict\";\n\nvar core = require('web3-core');\n\nvar Method = require('web3-core-method');\n\nvar utils = require('web3-utils');\n\nvar Net = function () {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments);\n  [new Method({\n    name: 'getId',\n    call: 'net_version',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'isListening',\n    call: 'net_listening',\n    params: 0\n  }), new Method({\n    name: 'getPeerCount',\n    call: 'net_peerCount',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  })].forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager);\n  });\n};\n\ncore.addProviders(Net);\nmodule.exports = Net;","map":{"version":3,"sources":["C:/Users/Blockchain FWPM/Desktop/N/solidity/src/eventManagerTruffle/client/node_modules/drizzle/node_modules/web3-net/src/index.js"],"names":["core","require","Method","utils","Net","_this","packageInit","arguments","name","call","params","outputFormatter","hexToNumber","forEach","method","attachToObject","setRequestManager","_requestManager","addProviders","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAgBA;;;;;AAMA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,YAAD,CAAnB;;AAGA,IAAIG,GAAG,GAAG,YAAY;AAClB,MAAIC,KAAK,GAAG,IAAZ,CADkB,CAGlB;;;AACAL,EAAAA,IAAI,CAACM,WAAL,CAAiB,IAAjB,EAAuBC,SAAvB;AAGA,GACI,IAAIL,MAAJ,CAAW;AACPM,IAAAA,IAAI,EAAE,OADC;AAEPC,IAAAA,IAAI,EAAE,aAFC;AAGPC,IAAAA,MAAM,EAAE,CAHD;AAIPC,IAAAA,eAAe,EAAER,KAAK,CAACS;AAJhB,GAAX,CADJ,EAOI,IAAIV,MAAJ,CAAW;AACPM,IAAAA,IAAI,EAAE,aADC;AAEPC,IAAAA,IAAI,EAAE,eAFC;AAGPC,IAAAA,MAAM,EAAE;AAHD,GAAX,CAPJ,EAYI,IAAIR,MAAJ,CAAW;AACPM,IAAAA,IAAI,EAAE,cADC;AAEPC,IAAAA,IAAI,EAAE,eAFC;AAGPC,IAAAA,MAAM,EAAE,CAHD;AAIPC,IAAAA,eAAe,EAAER,KAAK,CAACS;AAJhB,GAAX,CAZJ,EAkBEC,OAlBF,CAkBU,UAASC,MAAT,EAAiB;AACvBA,IAAAA,MAAM,CAACC,cAAP,CAAsBV,KAAtB;AACAS,IAAAA,MAAM,CAACE,iBAAP,CAAyBX,KAAK,CAACY,eAA/B;AACH,GArBD;AAuBH,CA9BD;;AAgCAjB,IAAI,CAACkB,YAAL,CAAkBd,GAAlB;AAGAe,MAAM,CAACC,OAAP,GAAiBhB,GAAjB","sourcesContent":["/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar core = require('web3-core');\r\nvar Method = require('web3-core-method');\r\nvar utils = require('web3-utils');\r\n\r\n\r\nvar Net = function () {\r\n    var _this = this;\r\n\r\n    // sets _requestmanager\r\n    core.packageInit(this, arguments);\r\n\r\n\r\n    [\r\n        new Method({\r\n            name: 'getId',\r\n            call: 'net_version',\r\n            params: 0,\r\n            outputFormatter: utils.hexToNumber\r\n        }),\r\n        new Method({\r\n            name: 'isListening',\r\n            call: 'net_listening',\r\n            params: 0\r\n        }),\r\n        new Method({\r\n            name: 'getPeerCount',\r\n            call: 'net_peerCount',\r\n            params: 0,\r\n            outputFormatter: utils.hexToNumber\r\n        })\r\n    ].forEach(function(method) {\r\n        method.attachToObject(_this);\r\n        method.setRequestManager(_this._requestManager);\r\n    });\r\n\r\n};\r\n\r\ncore.addProviders(Net);\r\n\r\n\r\nmodule.exports = Net;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}